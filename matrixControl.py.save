
__author__ = 'Terrace Boiz'

#!/usr/bin/python

# A more complex RGBMatrix example works with the Python Imaging Library,
# demonstrating a few graphics primitives and image loading.
# Note that PIL graphics do not have an immediate effect on the display --
# image is drawn into a separate buffer, which is then copied to the matrix
# using the SetImage() function (see examples below).
# Requires rgbmatrix.so present in the same directory.

# PIL Image module (create or load images) is explained here:
# http://effbot.org/imagingbook/image.htm
# PIL ImageDraw module (draw shapes to images) explained here:
# http://effbot.org/imagingbook/imagedraw.htm

import Image
import ImageDraw
import ImageColor
import ImageFont
import time
from rgbmatrix import Adafruit_RGBmatrix

# Rows and chain length are both required parameters:
matrix = Adafruit_RGBmatrix(32, 2)

# Bitmap example w/graphics prims
image = Image.new("1", (64, 32)) # Can be larger than matrix if wanted!!
draw  = ImageDraw.Draw(image)    # Declare Draw instance before prims
# Draw some shapes into image (no immediate effect on matrix)...
#draw.rectangle((0, 0, 31, 31), fill=(0,0,0))
#draw.line((0, 0, 31, 31), fill=1)
#draw.line((0, 31, 31, 0), fill=1)
# Then scroll image across matrix...
#matrix.Clear()
# IMPORTANT: *MUST* pass image ID, *NOT* image object!
#matrix.SetImage(image.im.id, 16, 0)
#time.sleep(5)
matrix.Clear()
#c = ImageColor.getrgb('red')

#c = (255, 0, 0)
font = ImageFont.truetype("/usr/share/fonts/truetype/freefont/FreeSerif.ttf",17)


draw.text((30,20),"Fuck You", font=font, fill = 1)
matrix.SetImage(image.im.id, 0, 0)
#draw.text((12,22), "Ray", fill=45)
#matrix.SetImage(image.im.id,0,0)
time.sleep(7);
matrix.Clear();


